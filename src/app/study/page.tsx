'use client'

import React, { useState } from 'react'
import Link from 'next/link'
import { motion } from 'framer-motion'
import {
    BookOpenIcon,
    AcademicCapIcon,
    TrophyIcon,
    ClockIcon,
    StarIcon,
    PlayIcon,
    CheckCircleIcon,
    LightBulbIcon,
    DocumentTextIcon,
    QuestionMarkCircleIcon,
    ChartBarIcon,
    FireIcon
} from '@heroicons/react/24/outline'

export default function StudyPage() {
    const [selectedCategory, setSelectedCategory] = useState('all')

    // Mock data for learning modules based on Ho Chi Minh Thought
    const categories = [
        { id: 'all', name: 'T·∫•t c·∫£', count: 24 },
        { id: 'philosophy', name: 'Tri·∫øt h·ªçc', count: 8 },
        { id: 'politics', name: 'Ch√≠nh tr·ªã', count: 6 },
        { id: 'ethics', name: 'ƒê·∫°o ƒë·ª©c', count: 5 },
        { id: 'history', name: 'L·ªãch s·ª≠', count: 5 }
    ]

    const stats = [
        {
            title: 'B√†i h·ªçc ho√†n th√†nh',
            value: '18',
            total: '24',
            change: '+3 tu·∫ßn n√†y',
            icon: BookOpenIcon,
            color: 'from-green-500 to-green-600',
            percentage: 75
        },
        {
            title: 'ƒêi·ªÉm trung b√¨nh',
            value: '8.5',
            total: '10',
            change: '+0.5 t·ª´ tu·∫ßn tr∆∞·ªõc',
            icon: StarIcon,
            color: 'from-yellow-500 to-yellow-600',
            percentage: 85
        },
        {
            title: 'Th·ªùi gian h·ªçc',
            value: '24h',
            total: '30h',
            change: '+6h tu·∫ßn n√†y',
            icon: ClockIcon,
            color: 'from-blue-500 to-blue-600',
            percentage: 80
        },
        {
            title: 'Ch·ª©ng ch·ªâ ƒë·∫°t ƒë∆∞·ª£c',
            value: '3',
            total: '5',
            change: '+1 tu·∫ßn n√†y',
            icon: TrophyIcon,
            color: 'from-red-500 to-amber-500',
            percentage: 60
        }
    ]

    const learningModules = [
        {
            id: 1,
            title: 'T∆∞ t∆∞·ªüng tri·∫øt h·ªçc c·ªßa H·ªì Ch√≠ Minh',
            description: 'T√¨m hi·ªÉu v·ªÅ n·ªÅn t·∫£ng tri·∫øt h·ªçc trong t∆∞ t∆∞·ªüng c·ªßa Ch·ªß t·ªãch H·ªì Ch√≠ Minh v√† ·∫£nh h∆∞·ªüng c·ªßa n√≥ ƒë·∫øn c√°ch m·∫°ng Vi·ªát Nam.',
            category: 'philosophy',
            difficulty: 'Trung b√¨nh',
            duration: '45 ph√∫t',
            progress: 100,
            completed: true,
            lessons: 5,
            score: 9.2,
            image: 'üéì'
        },
        {
            id: 2,
            title: 'Ch·ªß nghƒ©a y√™u n∆∞·ªõc theo H·ªì Ch√≠ Minh',
            description: 'Kh√°m ph√° tinh th·∫ßn y√™u n∆∞·ªõc v√† t√¨nh y√™u d√¢n t·ªôc trong t∆∞ t∆∞·ªüng HCM, c√°ch th·ªÉ hi·ªán trong th·ªùi ƒë·∫°i m·ªõi.',
            category: 'politics',
            difficulty: 'D·ªÖ',
            duration: '30 ph√∫t',
            progress: 80,
            completed: false,
            lessons: 4,
            score: 8.5,
            image: 'üáªüá≥'
        },
        {
            id: 3,
            title: 'ƒê·∫°o ƒë·ª©c c√°ch m·∫°ng H·ªì Ch√≠ Minh',
            description: 'H·ªçc t·∫≠p v·ªÅ ph·∫©m ch·∫•t ƒë·∫°o ƒë·ª©c c·ªßa ng∆∞·ªùi c√°ch m·∫°ng theo t·∫•m g∆∞∆°ng B√°c H·ªì v√† ·ª©ng d·ª•ng trong cu·ªôc s·ªëng.',
            category: 'ethics',
            difficulty: 'Kh√≥',
            duration: '60 ph√∫t',
            progress: 60,
            completed: false,
            lessons: 6,
            score: 0,
            image: 'üíé'
        },
        {
            id: 4,
            title: 'L·ªãch s·ª≠ c√°ch m·∫°ng Vi·ªát Nam',
            description: 'T√¨m hi·ªÉu v·ªÅ qu√° tr√¨nh l√£nh ƒë·∫°o c√°ch m·∫°ng c·ªßa Ch·ªß t·ªãch H·ªì Ch√≠ Minh t·ª´ 1945 ƒë·∫øn 1969.',
            category: 'history',
            difficulty: 'Trung b√¨nh',
            duration: '50 ph√∫t',
            progress: 100,
            completed: true,
            lessons: 7,
            score: 8.8,
            image: 'üìö'
        },
        {
            id: 5,
            title: 'T∆∞ t∆∞·ªüng x√¢y d·ª±ng nh√† n∆∞·ªõc c·ªßa HCM',
            description: 'Nghi√™n c·ª©u quan ƒëi·ªÉm v·ªÅ x√¢y d·ª±ng v√† ph√°t tri·ªÉn nh√† n∆∞·ªõc trong t∆∞ t∆∞·ªüng H·ªì Ch√≠ Minh.',
            category: 'politics',
            difficulty: 'Kh√≥',
            duration: '55 ph√∫t',
            progress: 40,
            completed: false,
            lessons: 5,
            score: 0,
            image: 'üèõÔ∏è'
        },
        {
            id: 6,
            title: 'VƒÉn h√≥a v√† gi√°o d·ª•c trong t∆∞ t∆∞·ªüng HCM',
            description: 'T√¨m hi·ªÉu quan ƒëi·ªÉm v·ªÅ vƒÉn h√≥a, gi√°o d·ª•c trong t∆∞ t∆∞·ªüng H·ªì Ch√≠ Minh v√† √Ω nghƒ©a hi·ªán ƒë·∫°i.',
            category: 'philosophy',
            difficulty: 'D·ªÖ',
            duration: '35 ph√∫t',
            progress: 20,
            completed: false,
            lessons: 4,
            score: 0,
            image: 'üìñ'
        }
    ]

    const filteredModules = selectedCategory === 'all'
        ? learningModules
        : learningModules.filter(module => module.category === selectedCategory)

    const getDifficultyColor = (difficulty: string) => {
        switch (difficulty) {
            case 'D·ªÖ': return 'text-green-600 bg-green-100 dark:text-green-400 dark:bg-green-900/20'
            case 'Trung b√¨nh': return 'text-yellow-600 bg-yellow-100 dark:text-yellow-400 dark:bg-yellow-900/20'
            case 'Kh√≥': return 'text-red-600 bg-red-100 dark:text-red-400 dark:bg-red-900/20'
            default: return 'text-neutral-600 bg-neutral-100 dark:text-neutral-400 dark:bg-neutral-900/20'
        }
    }

    return (
        <div className="space-y-8">
            {/* Header */}
            <div className="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-6">
                <div>
                    <h1 className="text-3xl font-bold text-neutral-900 dark:text-white mb-2 font-geist">
                        H·ªçc t·∫≠p T∆∞ t∆∞·ªüng H·ªì Ch√≠ Minh
                    </h1>
                    <p className="text-neutral-600 dark:text-neutral-400">
                        Kh√°m ph√° v√† h·ªçc t·∫≠p s√¢u s·∫Øc v·ªÅ t∆∞ t∆∞·ªüng H·ªì Ch√≠ Minh qua c√°c kh√≥a h·ªçc c√≥ h·ªá th·ªëng
                    </p>
                </div>
                <div className="flex gap-3">
                    <button className="bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white px-6 py-3 rounded-lg font-medium shadow-lg hover:shadow-xl transition-all duration-300">
                        <QuestionMarkCircleIcon className="h-5 w-5 mr-2 inline" />
                        L√†m b√†i ki·ªÉm tra
                    </button>
                    <button className="bg-gradient-to-r from-red-500 to-amber-500 hover:from-red-600 hover:to-amber-600 text-white px-6 py-3 rounded-lg font-medium shadow-lg hover:shadow-xl transition-all duration-300">
                        <ChartBarIcon className="h-5 w-5 mr-2 inline" />
                        Xem b√°o c√°o
                    </button>
                </div>
            </div>

            {/* Stats Grid */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                {stats.map((stat, index) => (
                    <motion.div
                        key={index}
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5, delay: index * 0.1 }}
                        className="bg-white dark:bg-neutral-800 rounded-xl p-6 border border-neutral-200 dark:border-neutral-700 hover:shadow-lg transition-all duration-300 group"
                    >
                        <div className="flex items-center justify-between mb-4">
                            <div className={`w-12 h-12 bg-gradient-to-r ${stat.color} rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300`}>
                                <stat.icon className="h-6 w-6 text-white" />
                            </div>
                            <span className="text-sm text-green-600 dark:text-green-400 font-medium">
                                {stat.change}
                            </span>
                        </div>
                        <div className="space-y-3">
                            <div className="flex items-end gap-1">
                                <p className="text-2xl font-bold text-neutral-900 dark:text-white font-geist">
                                    {stat.value}
                                </p>
                                <p className="text-sm text-neutral-500 dark:text-neutral-400 mb-1">
                                    /{stat.total}
                                </p>
                            </div>
                            <p className="text-sm text-neutral-600 dark:text-neutral-400 mb-3">
                                {stat.title}
                            </p>
                            <div className="w-full bg-neutral-200 dark:bg-neutral-700 rounded-full h-2">
                                <div
                                    className={`h-2 bg-gradient-to-r ${stat.color} rounded-full transition-all duration-500`}
                                    style={{ width: `${stat.percentage}%` }}
                                ></div>
                            </div>
                        </div>
                    </motion.div>
                ))}
            </div>

            {/* Categories Filter */}
            <div className="bg-white dark:bg-neutral-800 rounded-xl p-6 border border-neutral-200 dark:border-neutral-700">
                <h2 className="text-lg font-bold text-neutral-900 dark:text-white mb-4 font-geist">
                    Danh m·ª•c h·ªçc t·∫≠p
                </h2>
                <div className="flex flex-wrap gap-3">
                    {categories.map((category) => (
                        <button
                            key={category.id}
                            onClick={() => setSelectedCategory(category.id)}
                            className={`px-4 py-2 rounded-lg font-medium transition-all duration-300 ${selectedCategory === category.id
                                    ? 'bg-gradient-to-r from-red-500 to-amber-500 text-white shadow-lg'
                                    : 'bg-neutral-100 dark:bg-neutral-700 text-neutral-700 dark:text-neutral-300 hover:bg-neutral-200 dark:hover:bg-neutral-600'
                                }`}
                        >
                            {category.name}
                            <span className={`ml-2 px-2 py-1 rounded-full text-xs ${selectedCategory === category.id
                                    ? 'bg-white/20 text-white'
                                    : 'bg-neutral-200 dark:bg-neutral-600 text-neutral-600 dark:text-neutral-400'
                                }`}>
                                {category.count}
                            </span>
                        </button>
                    ))}
                </div>
            </div>

            {/* Learning Modules */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredModules.map((module, index) => (
                    <motion.div
                        key={module.id}
                        initial={{ opacity: 0, y: 30 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5, delay: index * 0.1 }}
                        className="bg-white dark:bg-neutral-800 rounded-xl border border-neutral-200 dark:border-neutral-700 overflow-hidden hover:shadow-lg transition-all duration-300 group"
                    >
                        {/* Module Header */}
                        <div className="p-6 pb-4">
                            <div className="flex items-start justify-between mb-4">
                                <div className="text-4xl">{module.image}</div>
                                <div className="flex items-center gap-2">
                                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${getDifficultyColor(module.difficulty)}`}>
                                        {module.difficulty}
                                    </span>
                                    {module.completed && (
                                        <CheckCircleIcon className="h-5 w-5 text-green-500" />
                                    )}
                                </div>
                            </div>

                            <h3 className="font-bold text-neutral-900 dark:text-white mb-2 group-hover:text-red-600 dark:group-hover:text-red-400 transition-colors">
                                {module.title}
                            </h3>

                            <p className="text-neutral-600 dark:text-neutral-400 text-sm mb-4 line-clamp-3">
                                {module.description}
                            </p>

                            <div className="flex items-center gap-4 text-sm text-neutral-500 dark:text-neutral-400 mb-4">
                                <span className="flex items-center gap-1">
                                    <ClockIcon className="h-4 w-4" />
                                    {module.duration}
                                </span>
                                <span className="flex items-center gap-1">
                                    <BookOpenIcon className="h-4 w-4" />
                                    {module.lessons} b√†i
                                </span>
                                {module.completed && (
                                    <span className="flex items-center gap-1">
                                        <StarIcon className="h-4 w-4" />
                                        {module.score}/10
                                    </span>
                                )}
                            </div>

                            {/* Progress Bar */}
                            <div className="mb-4">
                                <div className="flex justify-between text-sm mb-2">
                                    <span className="text-neutral-600 dark:text-neutral-400">Ti·∫øn ƒë·ªô</span>
                                    <span className="font-medium text-neutral-900 dark:text-white">{module.progress}%</span>
                                </div>
                                <div className="w-full bg-neutral-200 dark:bg-neutral-700 rounded-full h-2">
                                    <div
                                        className="h-2 bg-gradient-to-r from-red-500 to-amber-500 rounded-full transition-all duration-500"
                                        style={{ width: `${module.progress}%` }}
                                    ></div>
                                </div>
                            </div>
                        </div>

                        {/* Module Actions */}
                        <div className="px-6 pb-6">
                            <div className="flex gap-3">
                                {module.completed ? (
                                    <>
                                        <button className="flex-1 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white py-2 px-4 rounded-lg font-medium transition-all duration-300 flex items-center justify-center gap-2">
                                            <CheckCircleIcon className="h-4 w-4" />
                                            ƒê√£ ho√†n th√†nh
                                        </button>
                                        <button className="px-4 py-2 border border-neutral-300 dark:border-neutral-600 rounded-lg text-neutral-700 dark:text-neutral-300 hover:bg-neutral-50 dark:hover:bg-neutral-700 transition-colors">
                                            <DocumentTextIcon className="h-4 w-4" />
                                        </button>
                                    </>
                                ) : (
                                    <>
                                        <button className="flex-1 bg-gradient-to-r from-red-500 to-amber-500 hover:from-red-600 hover:to-amber-600 text-white py-2 px-4 rounded-lg font-medium transition-all duration-300 flex items-center justify-center gap-2">
                                            <PlayIcon className="h-4 w-4" />
                                            {module.progress > 0 ? 'Ti·∫øp t·ª•c' : 'B·∫Øt ƒë·∫ßu'}
                                        </button>
                                        <button className="px-4 py-2 border border-neutral-300 dark:border-neutral-600 rounded-lg text-neutral-700 dark:text-neutral-300 hover:bg-neutral-50 dark:hover:bg-neutral-700 transition-colors">
                                            <LightBulbIcon className="h-4 w-4" />
                                        </button>
                                    </>
                                )}
                            </div>
                        </div>
                    </motion.div>
                ))}
            </div>

            {/* Study Tips */}
            <div className="bg-gradient-to-r from-red-50 to-amber-50 dark:from-red-900/20 dark:to-amber-900/20 rounded-xl p-6 border border-red-200 dark:border-red-700">
                <div className="flex items-start space-x-4">
                    <div className="w-12 h-12 bg-gradient-to-r from-red-500 to-amber-500 rounded-xl flex items-center justify-center flex-shrink-0">
                        <LightBulbIcon className="h-6 w-6 text-white" />
                    </div>
                    <div className="flex-1">
                        <h3 className="font-bold text-neutral-900 dark:text-white mb-2">
                            M·∫πo h·ªçc t·∫≠p hi·ªáu qu·∫£ v·ªÅ T∆∞ t∆∞·ªüng H·ªì Ch√≠ Minh
                        </h3>
                        <p className="text-neutral-600 dark:text-neutral-400 text-sm mb-4">
                            ƒê·ªÉ h·ªçc t·∫≠p hi·ªáu qu·∫£ v·ªÅ t∆∞ t∆∞·ªüng H·ªì Ch√≠ Minh, h√£y k·∫øt h·ª£p gi·ªØa l√Ω thuy·∫øt v√† th·ª±c ti·ªÖn, th∆∞·ªùng xuy√™n th·∫£o lu·∫≠n v√† chia s·∫ª v·ªõi b·∫°n b√®. T√¨m hi·ªÉu b·ªëi c·∫£nh l·ªãch s·ª≠ v√† ·ª©ng d·ª•ng v√†o cu·ªôc s·ªëng hi·ªán ƒë·∫°i.
                        </p>
                        <div className="flex flex-wrap gap-2">
                            <span className="px-3 py-1 bg-red-100 dark:bg-red-900/30 text-red-700 dark:text-red-300 rounded-full text-xs">
                                Ghi ch√∫ quan tr·ªçng
                            </span>
                            <span className="px-3 py-1 bg-amber-100 dark:bg-amber-900/30 text-amber-700 dark:text-amber-300 rounded-full text-xs">
                                Th·∫£o lu·∫≠n nh√≥m
                            </span>
                            <span className="px-3 py-1 bg-green-100 dark:bg-green-900/30 text-green-700 dark:text-green-300 rounded-full text-xs">
                                ·ª®ng d·ª•ng th·ª±c t·∫ø
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    )
}